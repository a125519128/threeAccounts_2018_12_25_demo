<template>
	<flexbox >
	<flexbox-item class="container">

	 
			<div class="failed-img"></div>
			<span>开户失败</span>
	 		<span class="failed_span">XXXXXXXXXXXX</span>
					<!-- btn start -->
			<flexbox class="box_margin_button" orient="vertical">
				<flexbox-item>
					<div class="div_primary">
				 		<x-button type="primary" class="btn_primary" >关闭</x-button>
				 	</div>
				</flexbox-item>
				<!-- <flexbox-item>
					<div class="div_primary">
				 		<x-button   type="primary" plain class="btn_nl" >关闭</x-button>
				 	</div>
				</flexbox-item> -->
			</flexbox>
			<!-- btn end -->
		

	</flexbox-item>


	</flexbox>
</template>

<script>

export default {
	data(){
		return{
			msg:'',
			onFetching: false,
			bottomCount: 5,
		}
	},
	mounted(){
		this.msg = this.$route.query.msg;
	},
	methods:{
		/*onScrollBottom () {
	      if (this.onFetching) {
	        // do nothing
	        console.log('nothing')
	      } else {
	        this.onFetching = true
	        setTimeout(() => {
	          this.bottomCount += 10
	          this.$nextTick(() => {
	            this.$refs.scrollerBottom.reset()
	          })
	          this.onFetching = false
	        }, 2000)
	      }
	    }*/
	}
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
.container {
	width: 100%;
	min-height: 100vh;
	background: #fff;
	padding-top: 2rem;
	text-align: center;
}
.failed-img {
	width: 2.96rem;
	height: 1.48rem;
	background: url(../../../static/images/error.png) no-repeat;
	background-size: cover;
	margin: 0 auto 0.5rem;}

.container span {
	font-size:18px;
	color:#333333;
	text-align:center;
	letter-spacing: 3px;

}
.box_margin_button{
	margin-top:0.5rem;
}
.btn_nl{
	color:#1ca4fc !important;
	border-color: #1ca4fc !important;
}
.failed_span{
	display: block;
	color:red !important;
	margin-top:10px;
}
</style>